"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/lib/database.ts":
/*!*****************************!*\
  !*** ./app/lib/database.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   executeQuery: () => (/* binding */ executeQuery),\n/* harmony export */   initDatabaseFromCSV: () => (/* binding */ initDatabaseFromCSV)\n/* harmony export */ });\n/* harmony import */ var sql_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sql.js */ \"(app-pages-browser)/./node_modules/sql.js/dist/sql-wasm.js\");\n/* harmony import */ var sql_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sql_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! papaparse */ \"(app-pages-browser)/./node_modules/papaparse/papaparse.min.js\");\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(papaparse__WEBPACK_IMPORTED_MODULE_1__);\n\n\nlet SQL;\nlet db;\nasync function initDatabaseFromCSV() {\n    if (!SQL) {\n        SQL = await sql_js__WEBPACK_IMPORTED_MODULE_0___default()({\n            locateFile: (file)=>\"/sql.js/\".concat(file)\n        });\n    }\n    if (!db) {\n        try {\n            db = new SQL.Database();\n            const response = await fetch('/data/matches.csv');\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch CSV data: \".concat(response.statusText));\n            }\n            const csvData = await response.text();\n            // Remove table name extraction from filename and use 'testing' instead\n            const tableName = 'testing';\n            // Parse CSV data\n            const parsedData = papaparse__WEBPACK_IMPORTED_MODULE_1___default().parse(csvData, {\n                header: true,\n                skipEmptyLines: true\n            });\n            if (parsedData.data.length === 0) {\n                throw new Error('No data found in CSV');\n            }\n            // Generate CREATE TABLE statement from CSV headers\n            const headers = Object.keys(parsedData.data[0]);\n            const createTableSQL = \"\\n        CREATE TABLE IF NOT EXISTS \".concat(tableName, \" (\\n          \").concat(headers.map((header)=>\"\".concat(header, \" TEXT\")).join(',\\n          '), \"\\n        );\\n      \");\n            // Create table\n            db.run(createTableSQL);\n            // Generate and execute INSERT statements\n            const values = parsedData.data.map((row)=>\"(\".concat(headers.map((header)=>\"'\".concat((row[header] || '').replace(/'/g, \"''\"), \"'\")).join(', '), \")\")).join(',\\n          ');\n            const insertSQL = \"\\n        INSERT INTO \".concat(tableName, \" (\").concat(headers.join(', '), \")\\n        VALUES\\n          \").concat(values, \";\\n      \");\n            db.run(insertSQL);\n        } catch (error) {\n            console.error('Database initialization error:', error);\n            throw error;\n        }\n    }\n    return db;\n}\nasync function executeQuery(query) {\n    const db = await initDatabaseFromCSV();\n    try {\n        const results = db.exec(query);\n        return results.map((result)=>({\n                columns: result.columns,\n                values: result.values\n            }));\n    } catch (error) {\n        console.error('Query execution error:', error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9saWIvZGF0YWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStCO0FBQ0Y7QUFFN0IsSUFBSUU7QUFDSixJQUFJQztBQUVHLGVBQWVDO0lBQ3BCLElBQUksQ0FBQ0YsS0FBSztRQUNSQSxNQUFNLE1BQU1GLDZDQUFTQSxDQUFDO1lBQ3BCSyxZQUFZLENBQUNDLE9BQWlCLFdBQWdCLE9BQUxBO1FBQzNDO0lBQ0Y7SUFFQSxJQUFJLENBQUNILElBQUk7UUFDUCxJQUFJO1lBQ0ZBLEtBQUssSUFBSUQsSUFBSUssUUFBUTtZQUVyQixNQUFNQyxXQUFXLE1BQU1DLE1BQU07WUFDN0IsSUFBSSxDQUFDRCxTQUFTRSxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sSUFBSUMsTUFBTSw2QkFBaUQsT0FBcEJILFNBQVNJLFVBQVU7WUFDbEU7WUFFQSxNQUFNQyxVQUFVLE1BQU1MLFNBQVNNLElBQUk7WUFFbkMsdUVBQXVFO1lBQ3ZFLE1BQU1DLFlBQVk7WUFFbEIsaUJBQWlCO1lBQ2pCLE1BQU1DLGFBQWFmLHNEQUFVLENBQUNZLFNBQVM7Z0JBQ3JDSyxRQUFRO2dCQUNSQyxnQkFBZ0I7WUFDbEI7WUFFQSxJQUFJSCxXQUFXSSxJQUFJLENBQUNDLE1BQU0sS0FBSyxHQUFHO2dCQUNoQyxNQUFNLElBQUlWLE1BQU07WUFDbEI7WUFFQSxtREFBbUQ7WUFDbkQsTUFBTVcsVUFBVUMsT0FBT0MsSUFBSSxDQUFDUixXQUFXSSxJQUFJLENBQUMsRUFBRTtZQUM5QyxNQUFNSyxpQkFBaUIsd0NBRWpCSCxPQUR5QlAsV0FBVSxrQkFDMkIsT0FBOURPLFFBQVFJLEdBQUcsQ0FBQ1IsQ0FBQUEsU0FBVSxHQUFVLE9BQVBBLFFBQU8sVUFBUVMsSUFBSSxDQUFDLGtCQUFpQjtZQUlwRSxlQUFlO1lBQ2Z4QixHQUFHeUIsR0FBRyxDQUFDSDtZQUVQLHlDQUF5QztZQUN6QyxNQUFNSSxTQUFTYixXQUFXSSxJQUFJLENBQUNNLEdBQUcsQ0FBQ0ksQ0FBQUEsTUFDakMsSUFBcUYsT0FBakZSLFFBQVFJLEdBQUcsQ0FBQ1IsQ0FBQUEsU0FBVSxJQUE0QyxPQUF4QyxDQUFDWSxHQUFHLENBQUNaLE9BQU8sSUFBSSxFQUFDLEVBQUdhLE9BQU8sQ0FBQyxNQUFNLE9BQU0sTUFBSUosSUFBSSxDQUFDLE9BQU0sTUFDckZBLElBQUksQ0FBQztZQUVQLE1BQU1LLFlBQVkseUJBQ1lWLE9BQWRQLFdBQVUsTUFFcEJjLE9BRndCUCxRQUFRSyxJQUFJLENBQUMsT0FBTSxpQ0FFcEMsT0FBUEUsUUFBTztZQUdiMUIsR0FBR3lCLEdBQUcsQ0FBQ0k7UUFDVCxFQUFFLE9BQU9DLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLGtDQUFrQ0E7WUFDaEQsTUFBTUE7UUFDUjtJQUNGO0lBRUEsT0FBTzlCO0FBQ1Q7QUFFTyxlQUFlZ0MsYUFBYUMsS0FBYTtJQUM5QyxNQUFNakMsS0FBSyxNQUFNQztJQUNqQixJQUFJO1FBQ0YsTUFBTWlDLFVBQVVsQyxHQUFHbUMsSUFBSSxDQUFDRjtRQUN4QixPQUFPQyxRQUFRWCxHQUFHLENBQUNhLENBQUFBLFNBQVc7Z0JBQzVCQyxTQUFTRCxPQUFPQyxPQUFPO2dCQUN2QlgsUUFBUVUsT0FBT1YsTUFBTTtZQUN2QjtJQUNGLEVBQUUsT0FBT0ksT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMEJBQTBCQTtRQUN4QyxNQUFNQTtJQUNSO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9nb3V0aGFtL3NreXdvcmtzL2FwcC9saWIvZGF0YWJhc2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGluaXRTcWxKcyBmcm9tICdzcWwuanMnO1xuaW1wb3J0IFBhcGEgZnJvbSAncGFwYXBhcnNlJztcblxubGV0IFNRTDogYW55O1xubGV0IGRiOiBhbnk7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbml0RGF0YWJhc2VGcm9tQ1NWKCkge1xuICBpZiAoIVNRTCkge1xuICAgIFNRTCA9IGF3YWl0IGluaXRTcWxKcyh7XG4gICAgICBsb2NhdGVGaWxlOiAoZmlsZTogc3RyaW5nKSA9PiBgL3NxbC5qcy8ke2ZpbGV9YFxuICAgIH0pO1xuICB9XG5cbiAgaWYgKCFkYikge1xuICAgIHRyeSB7XG4gICAgICBkYiA9IG5ldyBTUUwuRGF0YWJhc2UoKTtcbiAgICAgIFxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2RhdGEvbWF0Y2hlcy5jc3YnKTtcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggQ1NWIGRhdGE6ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH1gKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgY3N2RGF0YSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgIFxuICAgICAgLy8gUmVtb3ZlIHRhYmxlIG5hbWUgZXh0cmFjdGlvbiBmcm9tIGZpbGVuYW1lIGFuZCB1c2UgJ3Rlc3RpbmcnIGluc3RlYWRcbiAgICAgIGNvbnN0IHRhYmxlTmFtZSA9ICd0ZXN0aW5nJztcbiAgICAgIFxuICAgICAgLy8gUGFyc2UgQ1NWIGRhdGFcbiAgICAgIGNvbnN0IHBhcnNlZERhdGEgPSBQYXBhLnBhcnNlKGNzdkRhdGEsIHtcbiAgICAgICAgaGVhZGVyOiB0cnVlLFxuICAgICAgICBza2lwRW1wdHlMaW5lczogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChwYXJzZWREYXRhLmRhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gZGF0YSBmb3VuZCBpbiBDU1YnKTtcbiAgICAgIH1cblxuICAgICAgLy8gR2VuZXJhdGUgQ1JFQVRFIFRBQkxFIHN0YXRlbWVudCBmcm9tIENTViBoZWFkZXJzXG4gICAgICBjb25zdCBoZWFkZXJzID0gT2JqZWN0LmtleXMocGFyc2VkRGF0YS5kYXRhWzBdKTtcbiAgICAgIGNvbnN0IGNyZWF0ZVRhYmxlU1FMID0gYFxuICAgICAgICBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyAke3RhYmxlTmFtZX0gKFxuICAgICAgICAgICR7aGVhZGVycy5tYXAoaGVhZGVyID0+IGAke2hlYWRlcn0gVEVYVGApLmpvaW4oJyxcXG4gICAgICAgICAgJyl9XG4gICAgICAgICk7XG4gICAgICBgO1xuXG4gICAgICAvLyBDcmVhdGUgdGFibGVcbiAgICAgIGRiLnJ1bihjcmVhdGVUYWJsZVNRTCk7XG5cbiAgICAgIC8vIEdlbmVyYXRlIGFuZCBleGVjdXRlIElOU0VSVCBzdGF0ZW1lbnRzXG4gICAgICBjb25zdCB2YWx1ZXMgPSBwYXJzZWREYXRhLmRhdGEubWFwKHJvdyA9PiBcbiAgICAgICAgYCgke2hlYWRlcnMubWFwKGhlYWRlciA9PiBgJyR7KHJvd1toZWFkZXJdIHx8ICcnKS5yZXBsYWNlKC8nL2csIFwiJydcIil9J2ApLmpvaW4oJywgJyl9KWBcbiAgICAgICkuam9pbignLFxcbiAgICAgICAgICAnKTtcblxuICAgICAgY29uc3QgaW5zZXJ0U1FMID0gYFxuICAgICAgICBJTlNFUlQgSU5UTyAke3RhYmxlTmFtZX0gKCR7aGVhZGVycy5qb2luKCcsICcpfSlcbiAgICAgICAgVkFMVUVTXG4gICAgICAgICAgJHt2YWx1ZXN9O1xuICAgICAgYDtcblxuICAgICAgZGIucnVuKGluc2VydFNRTCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIGluaXRpYWxpemF0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkYjtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV4ZWN1dGVRdWVyeShxdWVyeTogc3RyaW5nKTogUHJvbWlzZTxRdWVyeVJlc3VsdFtdPiB7XG4gIGNvbnN0IGRiID0gYXdhaXQgaW5pdERhdGFiYXNlRnJvbUNTVigpO1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3VsdHMgPSBkYi5leGVjKHF1ZXJ5KTtcbiAgICByZXR1cm4gcmVzdWx0cy5tYXAocmVzdWx0ID0+ICh7XG4gICAgICBjb2x1bW5zOiByZXN1bHQuY29sdW1ucyxcbiAgICAgIHZhbHVlczogcmVzdWx0LnZhbHVlc1xuICAgIH0pKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdRdWVyeSBleGVjdXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVlcnlSZXN1bHQge1xuICBjb2x1bW5zOiBzdHJpbmdbXTtcbiAgdmFsdWVzOiBhbnlbXVtdO1xufSAiXSwibmFtZXMiOlsiaW5pdFNxbEpzIiwiUGFwYSIsIlNRTCIsImRiIiwiaW5pdERhdGFiYXNlRnJvbUNTViIsImxvY2F0ZUZpbGUiLCJmaWxlIiwiRGF0YWJhc2UiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsInN0YXR1c1RleHQiLCJjc3ZEYXRhIiwidGV4dCIsInRhYmxlTmFtZSIsInBhcnNlZERhdGEiLCJwYXJzZSIsImhlYWRlciIsInNraXBFbXB0eUxpbmVzIiwiZGF0YSIsImxlbmd0aCIsImhlYWRlcnMiLCJPYmplY3QiLCJrZXlzIiwiY3JlYXRlVGFibGVTUUwiLCJtYXAiLCJqb2luIiwicnVuIiwidmFsdWVzIiwicm93IiwicmVwbGFjZSIsImluc2VydFNRTCIsImVycm9yIiwiY29uc29sZSIsImV4ZWN1dGVRdWVyeSIsInF1ZXJ5IiwicmVzdWx0cyIsImV4ZWMiLCJyZXN1bHQiLCJjb2x1bW5zIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/database.ts\n"));

/***/ })

});